export type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[]

export interface Database {
  public: {
    Tables: {
      alerts: {
        Row: {
          criteria: Json | null
          description: string | null
          id: string
          is_active: boolean
          name: string
          created_at: string
          updated_at: string | null
          user_id: string
          alert_type: string
        }
        Insert: {
          criteria?: Json | null
          description?: string | null
          id?: string
          is_active?: boolean
          name: string
          created_at?: string
          updated_at?: string | null
          user_id: string
          alert_type: string
        }
        Update: {
          criteria?: Json | null
          description?: string | null
          id?: string
          is_active?: boolean
          name?: string
          created_at?: string
          updated_at?: string | null
          user_id?: string
          alert_type?: string
        }
        Relationships: [
          {
            foreignKeyName: "alerts_user_id_fkey"
            columns: ["user_id"]
            referencedRelation: "users"
            referencedColumns: ["id"]
          }
        ]
      }
      news_articles: {
        Row: {
          id: string
          title: string
          content: string
          summary: string | null
          source_id: string
          published_at: string | null
          url: string | null
          image_url: string | null
          category: string | null
          tags: string[] | null
          impact_score: number
          embedding: any | null
          created_at: string
          last_embedded_at: string | null
        }
        Insert: {
          id?: string
          title: string
          content: string
          summary?: string | null
          source_id: string
          published_at?: string | null
          url?: string | null
          image_url?: string | null
          category?: string | null
          tags?: string[] | null
          impact_score: number
          embedding?: any | null
          created_at?: string
          last_embedded_at?: string | null
        }
        Update: {
          id?: string
          title?: string
          content?: string
          summary?: string | null
          source_id?: string
          published_at?: string | null
          url?: string | null
          image_url?: string | null
          category?: string | null
          tags?: string[] | null
          impact_score?: number
          embedding?: any | null
          created_at?: string
          last_embedded_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "news_articles_source_id_fkey"
            columns: ["source_id"]
            referencedRelation: "news_sources"
            referencedColumns: ["id"]
          }
        ]
      }
      news_sources: {
        Row: {
          id: string
          name: string
          url: string | null
          logo_url: string | null
          category: string | null
        }
        Insert: {
          id?: string
          name: string
          url?: string | null
          logo_url?: string | null
          category?: string | null
        }
        Update: {
          id?: string
          name?: string
          url?: string | null
          logo_url?: string | null
          category?: string | null
        }
        Relationships: []
      }
      profiles: {
        Row: {
          id: string
          updated_at: string | null
          username: string | null
          full_name: string | null
          avatar_url: string | null
          website: string | null
          role: string | null
          intelligence_profile: Json | null
        }
        Insert: {
          id: string
          updated_at?: string | null
          username?: string | null
          full_name?: string | null
          avatar_url?: string | null
          website?: string | null
          role?: string | null
          intelligence_profile?: Json | null
        }
        Update: {
          id?: string
          updated_at?: string | null
          username?: string | null
          full_name?: string | null
          avatar_url?: string | null
          website?: string | null
          role?: string | null
          intelligence_profile?: Json | null
        }
        Relationships: [
          {
            foreignKeyName: "profiles_id_fkey"
            columns: ["id"]
            referencedRelation: "users"
            referencedColumns: ["id"]
          }
        ]
      }
      saved_articles: {
        Row: {
          id: string
          user_id: string
          article_id: string
          created_at: string
        }
        Insert: {
          id?: string
          user_id: string
          article_id: string
          created_at?: string
        }
        Update: {
          id?: string
          user_id?: string
          article_id?: string
          created_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "saved_articles_article_id_fkey"
            columns: ["article_id"]
            referencedRelation: "news_articles"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "saved_articles_user_id_fkey"
            columns: ["user_id"]
            referencedRelation: "users"
            referencedColumns: ["id"]
          }
        ]
      }
      user_preferences: {
        Row: {
          user_id: string
          theme: string | null
          email_notifications: boolean | null
          push_notifications: boolean | null
          in_app_notifications: boolean | null
          preferences: Json | null
          created_at: string
          updated_at: string | null
        }
        Insert: {
          user_id: string
          theme?: string | null
          email_notifications?: boolean | null
          push_notifications?: boolean | null
          in_app_notifications?: boolean | null
          preferences?: Json | null
          created_at?: string
          updated_at?: string | null
        }
        Update: {
          user_id?: string
          theme?: string | null
          email_notifications?: boolean | null
          push_notifications?: boolean | null
          in_app_notifications?: boolean | null
          preferences?: Json | null
          created_at?: string
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "user_preferences_user_id_fkey"
            columns: ["user_id"]
            referencedRelation: "users"
            referencedColumns: ["id"]
          }
        ]
      }
      alert_notifications: {
        Row: {
          id: string
          alert_id: string | null
          user_id: string | null
          article_id: string | null
          message: string | null
          created_at: string
        }
        Insert: {
          id?: string
          alert_id?: string | null
          user_id?: string | null
          article_id?: string | null
          message?: string | null
          created_at?: string
        }
        Update: {
          id?: string
          alert_id?: string | null
          user_id?: string | null
          article_id?: string | null
          message?: string | null
          created_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "alert_notifications_alert_id_fkey"
            columns: ["alert_id"]
            referencedRelation: "alerts"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "alert_notifications_article_id_fkey"
            columns: ["article_id"]
            referencedRelation: "news_articles"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "alert_notifications_user_id_fkey"
            columns: ["user_id"]
            referencedRelation: "users"
            referencedColumns: ["id"]
          }
        ]
      }
      user_reading_events: {
        Row: {
          id: string
          user_id: string
          article_id: string
          event_type: string
          duration: number | null
          completion_percentage: number | null
          created_at: string
        }
        Insert: {
          id?: string
          user_id: string
          article_id: string
          event_type: string
          duration?: number | null
          completion_percentage?: number | null
          created_at?: string
        }
        Update: {
          id?: string
          user_id?: string
          article_id?: string
          event_type?: string
          duration?: number | null
          completion_percentage?: number | null
          created_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "user_reading_events_article_id_fkey"
            columns: ["article_id"]
            referencedRelation: "news_articles"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "user_reading_events_user_id_fkey"
            columns: ["user_id"]
            referencedRelation: "users"
            referencedColumns: ["id"]
          }
        ]
      }
      recommendation_feedback: {
        Row: {
          id: string
          user_id: string
          recommendation_id: string
          rating: number
          helpful: boolean | null
          applied: boolean | null
          feedback_text: string | null
          created_at: string
        }
        Insert: {
          id?: string
          user_id: string
          recommendation_id: string
          rating: number
          helpful?: boolean | null
          applied?: boolean | null
          feedback_text?: string | null
          created_at?: string
        }
        Update: {
          id?: string
          user_id?: string
          recommendation_id?: string
          rating?: number
          helpful?: boolean | null
          applied?: boolean | null
          feedback_text?: string | null
          created_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "recommendation_feedback_user_id_fkey"
            columns: ["user_id"]
            referencedRelation: "users"
            referencedColumns: ["id"]
          }
        ]
      }
      admin_settings: {
        Row: {
          key: string
          value: Json | null
          updated_at: string
        }
        Insert: {
          key: string
          value?: Json | null
          updated_at?: string
        }
        Update: {
          key?: string
          value?: Json | null
          updated_at?: string
        }
        Relationships: []
      }
      error_logs: {
        Row: {
          id: string
          level: string
          message: string
          source: string
          context: Json | null
          stack_trace: string | null
          user_id: string | null
          timestamp: string
        }
        Insert: {
          id?: string
          level: string
          message: string
          source: string
          context: Json | null
          stack_trace?: string | null
          user_id?: string | null
          timestamp?: string
        }
        Update: {
          id?: string
          level?: string
          message?: string
          source?: string
          context?: Json | null
          stack_trace?: string | null
          user_id?: string | null
          timestamp?: string
        }
        Relationships: [
          {
            foreignKeyName: "error_logs_user_id_fkey"
            columns: ["user_id"]
            referencedRelation: "users"
            referencedColumns: ["id"]
          }
        ]
      }
    }
    Views: {
      [_ in never]: never
    }
    Functions: {
      match_articles: {
        Args: {
          query_embedding: any
          match_threshold: number
          match_count: number
        }
        Returns: {
          id: string
          title: string
          content: string
          summary: string
          source_id: string
          published_at: string
          url: string
          image_url: string
          category: string
          tags: string[]
          impact_score: number
          created_at: string
          similarity: number
        }[]
      }
      match_news_articles: {
        Args: {
          query_embedding: any
          match_threshold: number
          match_count: number
        }
        Returns: {
          id: string
          title: string
          content: string
          summary: string
          source_id: string
          published_at: string
          url: string
          image_url: string
          category: string
          tags: string[]
          impact_score: number
          created_at: string
          similarity: number
        }[]
      }
    }
    Enums: {
      [_ in never]: never
    }
    CompositeTypes: {
      [_ in never]: never
    }
  }
}

export type Tables<
  T extends keyof Database["public"]["Tables"],
  K extends keyof Database["public"]["Tables"][T]["Row"] = keyof Database["public"]["Tables"][T]["Row"]
> = Database["public"]["Tables"][T]["Row"][K]
